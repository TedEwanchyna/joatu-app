# -*- mode: ruby -*-
# vi: set ft=ruby :
require "thor"

class JoatuDev < Thor
  desc "setup", "Setup a basic development environment"
  def setup
    unless docker_installed? && boot2docker_installed?
      raise "You need to install docker first. Please follow the instructions here: https://docs.docker.com/installation/"
    end

    docker_init!

    postgres_cid_path = "tmp/cids/postgres.cid"
    unless File.exist? postgres_cid_path
      docker "run -d --name='postgres' #{envs} --cidfile='#{postgres_cid_path}' undergroundwebdevelopment/postgres:9.3" # 2>/dev/null"
    end

    joatu_cid_path = "tmp/cids/joatu-app.cid"
    unless File.exist? joatu_cid_path
      docker "run -d --name='joatu-app' --cidfile='#{joatu_cid_path}' --link postgres:db joatu/joatu-app:dev" # 2>/dev/null"
    end
  end

  desc "start", "Starts the dev environment, setting it up if neceesary."
  def start
    setup

    puts "Starting postgres container."
    start_postgres!

    puts "Starting joatu-app container."
    start_joatu!
  end

  desc "stop", "Stops the containers and shuts down boot2docker"
  def stop
    docker_init!
    puts "Shutting down postgres container."
    docker "stop `cat tmp/cids/postgres.cid` 1>/dev/null"
    puts "Shutting down joatu-app container."
    docker "stop `cat tmp/cids/joatu-app.cid` 1>/dev/null"

    puts "Shutting down boot2docker."
    system "boot2docker halt"
  end

  desc "bash", "Opens a bash shell in the context of the rails app"
  def bash
    setup

    puts "About to start shell. Note, you may have to hit return (enter) to refesh your terminal before you see a prompt."
    start_postgres!

    if File.exist? 'tmp/cids/joatu-shell.cid'
      docker "start `cat tmp/cids/joatu-shell.cid` 1>/dev/null"
      docker "attach `cat tmp/cids/joatu-shell.cid`"
    else
      docker "run -ti --name='joatu-app-shell' --cidfile='tmp/cids/joatu-shell.cid' --link postgres:db joatu/joatu-app:dev /bin/bash"
    end
  end

  desc "destroy", "Cleans up and removes the boot2docker VM"
  def destroy
    if docker_installed? && boot2docker_installed?
      puts "Cleaning up cid files."
      system "rm tmp/cids/*.cid"
      puts "Calling `boot2docker destroy`"
      system "boot2docker destroy"
    end
  end

  protected

  def docker_init!
    unless `boot2docker status`.strip == 'running'
      puts "Initializizing Boot2Docker."
      system "boot2docker init"
      puts "Starting Boot2Docker."
      system "boot2docker up"
    end
    @docker_host_ip = `boot2docker ip 2>/dev/null`
  end

  def docker_installed?
    system 'which docker 2>&1>/dev/null'
  end

  def boot2docker_installed?
    system 'which boot2docker 2>&1>/dev/null'
  end

  def start_postgres!
    start_image! "tmp/cids/postgres.cid"
  end

  def start_joatu!
    start_image! "tmp/cids/joatu-app.cid"
  end

  def start_image! (cid_file_path)
    if File.exist? cid_file_path
      docker "start `cat #{cid_file_path}`" # 1>/dev/null"
    else
      raise ".cid file for postgres at #{cid_file_path} not found!"
    end
  end

  def docker(command)
    raise "Docker host IP not yet set! Need to call docker_init! first!" unless @docker_host_ip
    system "DOCKER_HOST=tcp://#{@docker_host_ip}:2375 docker #{command}"
  end

  def envs
    postgres_user = "joatu-postgres"
    postgres_pw = "23k4jl34k23j09dfs0je3S##jdfs"

    "-e 'POSTGRESQL_USER=#{postgres_user}' -e 'POSTGRESQL_PASS=#{postgres_pw}'"
  end
end
 
JoatuDev.start(ARGV)
